/*
===============================================================================
Stored Procedure: Load Silver Layer (Bronze -> Silver)
===============================================================================

Script Purpose:
    This stored procedure performs the ETL (Extract, Transform, Load) process to 
    populate the 'silver' schema tables from the 'bronze' schema.
    Actions Performed:
    - Truncates Silver tables.
    - Inserts transformed and cleansed data from Bronze into Silver tables.

Parameters:
    None.
    This stored procedure does not accept any parameters or return any values.

Usage Example:
    EXEC Silver.load_silver;

===============================================================================
*/
use DWH
go

create or alter procedure silver.load_silver as
begin
	declare @Start_time datetime, @End_Time datetime, @Batch_Start_Time datetime, @Batch_End_Time datetime ;
	begin try
		set @Batch_Start_Time = Getdate();
		print '-------------------------------------------------------------------------'
		print '-------------------- Loading Silver Layer -------------------------------'
		print '-------------------------------------------------------------------------'

		print '-------------------------------------------------------------------------'
		print '-------------------- Loading CRM Tables ---------------------------------'
		print '-------------------------------------------------------------------------'

		set @Start_time = Getdate()
		print '>>Truncate Table: silver.crm_cust_info';
		truncate table silver.crm_cust_info;
		print '>>Insert Data Into: silver.crm_cust_info';
		Insert into silver.crm_cust_info(
										  cst_id,
										  cst_key,
										  cst_firstname,
										  cst_lastname,
										  cst_marital_status,
										  cst_gndr,
										  cst_create_date
										  )
		select 
			cst_id,
			cst_key,
			trim(cst_firstname) as cst_firstname,
			trim(cst_lastname) as cst_lastname,
			case

				when upper(trim(cst_marital_status)) like '%M%' then  'Married'
				when upper(trim(cst_marital_status)) like '%S%' then  'Single'
				else 'n\a' end as cst_marital_status,
			case 
				when upper(trim(cst_gndr)) like '%M%' then 'Male'
				when upper(trim(cst_gndr)) like '%F%' then 'Female'
				else 'n\a'end as cst_gndr,
			cst_create_date 
			from
				(SELECT *,
				row_number() over (partition by cst_id order by cst_create_date desc) as flag_last
				FROM [DWH].[bronze].[crm_cust_info]
				where cst_id is not null )x
				where x.flag_last = 1;
		set @End_Time = Getdate();
		print '>>Load Duration is: ' + cast(datediff(second, @Start_Time, @End_Time) as nvarchar) + 'Second';
		print '-----------------------------------------------------------------------------'

		set @Start_Time = Getdate();
		print '>>Truncate Table: silver.crm_prd_info';
		truncate table silver.crm_prd_info;
		print '>>Insert Data Into: silver.crm_prd_info';
		insert into silver.crm_prd_info(
										prd_id,
										cat_id,
										prd_key,
										prd_nm,
										prd_cost,
										prd_line,
										prd_start_dt,
										prd_end_dt
										)						
		SELECT 
			prd_id,
			replace(trim(substring(prd_key,1,5)),'-','_') as cat_id,
			trim(substring(prd_key,7,len(prd_key))) as prd_key,
			prd_nm,
			isnull(prd_cost, 0) as prd_cost,
			case 
				when upper(trim(prd_line)) = 'M' then 'Mountain'
				when upper(trim(prd_line)) = 'R' then 'Road'
				when upper(trim(prd_line)) = 'S' then 'Other Sales'
				when upper(trim(prd_line)) = 'T' then 'Touring'
				else 'n\a' 
			end as prd_line,
			cast(prd_start_dt as date) as prd_start_dt,
			cast(lead(prd_start_dt) over (partition by prd_key order by prd_start_dt)-1 as date) as prd_end_dt
		FROM [DWH].[bronze].[crm_prd_info]
		order by prd_key;
		set @End_Time = Getdate();
		print '>>Load Duration is: ' + cast(datediff(second, @Start_Time, @End_Time) as nvarchar) + 'Second';
		print '------------------------------------------------------------------------------'

		set @Start_Time = Getdate();
		print '>>Truncate Table: silver.crm_sales_details';
		truncate table silver.crm_sales_details;
		print '>>Insert Data Into: silver.crm_sales_details';
		insert into silver.crm_sales_details(
											sls_ord_num,
											sls_prd_key,
											sls_cust_id,
											sls_order_dt,
											sls_ship_dt,
											sls_due_dt,
											sls_sales,
											sls_quantity,
											sls_price
											)
		SELECT 
			sls_ord_num,
			sls_prd_key,
			sls_cust_id,
			case 
				when sls_order_dt <=0 or len(sls_order_dt) != 8 then null
				else cast(cast(sls_order_dt as varchar) as date) end as
			sls_order_dt ,
			case 
				when sls_ship_dt <=0 or len(sls_ship_dt) != 8 then null
				else cast(cast(sls_ship_dt as varchar) as date) end as
			sls_ship_dt,
			case 
				when sls_due_dt <=0 or len(sls_due_dt) != 8 then null
				else cast(cast(sls_due_dt as varchar) as date) end as
			sls_due_dt,
			case 
				when sls_sales is null or sls_sales < =0 or sls_sales != sls_quantity * ABS(sls_price) 
				then sls_quantity * ABS(sls_price) else sls_sales end as
			sls_sales,
			sls_quantity,
			case 
				when sls_price is null or sls_price = 0 then sls_sales / nullif(sls_quantity,0)
				when sls_price < 0 then ABS(sls_price)
				else sls_price end as
			sls_price
		FROM bronze.crm_sales_details;
		set @End_Time = Getdate();
		print '>>Load Duration is: ' + cast(datediff(second, @Start_Time, @End_Time) as nvarchar) + 'Second';

		print '-------------------------------------------------------------------------'
		print '-------------------- Loading ERP Tables ---------------------------------'
		print '-------------------------------------------------------------------------'

		set @Start_Time = Getdate();
		print '>>Truncate Table: silver.erp_cust_az12';
		truncate table silver.erp_cust_az12;
		print '>>Insert Data Into: silver.erp_cust_az12';
		insert into silver.erp_cust_az12(
										cid,
										bdate,
										gen
										)
		SELECT case 
					when cid like 'NAS%' then substring(cid, 4, len(cid)) 
					else cid end as 
				cid,
				case 
					when bdate > getdate() then null 
					else bdate end as
				bdate,
				case 
					when upper(trim(gen)) in ('M','MALE') then 'Male'
					when upper(trim(gen)) in ('F','FEMALE') then 'Female'
					else 'n\a' end as
				gen
		FROM bronze.erp_cust_az12;
		set @End_Time = Getdate();
		print '>>Load Duration is: ' + cast(datediff(second, @Start_Time, @End_Time) as nvarchar) + 'Second';
		print'------------------------------------------------------------------------'

		set @Start_Time = Getdate();
		print '>>Truncate Table: silver.erp_loc_a101';
		truncate table silver.erp_loc_a101;
		print '>>Insert Data Into: silver.erp_loc_a101';
		insert into silver.erp_loc_a101(
										cid,
										cntry
										)
		select 
			 replace(cid,'-','') as 
			 cid,
			 case 
				 when upper(trim(cntry)) = 'DE' then 'Germany'
				 when upper(trim(cntry)) in ('USA','US') THEN 'United States'
				 when cntry is null or upper(trim(cntry))='' then 'n\a'
				 else trim(cntry) end as
			 cntry
		from bronze.erp_loc_a101;
		set @End_Time = Getdate();
		print '>>Load Duration is: ' + cast(datediff(second, @Start_Time, @End_Time) as nvarchar) + 'Second';
		print '-----------------------------------------------------------------------------'

		set @Start_Time = Getdate();
		print '>>Truncate Table: silver.erp_px_cat_g1v2';
		truncate table silver.erp_px_cat_g1v2;
		print '>>Insert Data Into: silver.erp_px_cat_g1v2';
		insert into silver.erp_px_cat_g1v2(
											id,
											cat,
											subcat,
											maintenance
											)
		select * from bronze.erp_px_cat_g1v2;
		set @End_Time = Getdate();
		print '>>Load Duration is: ' + cast(datediff(second, @Start_Time, @End_Time) as nvarchar) + 'Second';

		set @Batch_End_Time = Getdate()
		print'-----------------------------------------------------------';
		print'Loading Silver Layer is complete'
		print' Total Duration is:'+ cast(datediff(second, @Batch_End_Time, @Batch_Start_Time) as nvarchar) + 'Second';
		print'------------------------------------------------------------';
	end try
	begin catch
	print '==============================================================';
	print 'Error Occure During Loading';
	print 'Error Message' + error_message();
	print 'Error Number' + cast(error_number() as nvarchar);
	print 'Error state' + cast(error_state() as nvarchar);
	print '==============================================================';
	end catch
end;


exec silver.load_silver;

